function Level_setSaveString(){let t="";for(let r=0;r<this.allCards.length;r++){let e=this.allCards[r].cardType.i+16*this.allCards[r].codeDetail;t+=""+e+(r<this.allCards.length-1?"@":"")}Settings.levelStates[this.settingsI]=`${this.currState.getSaveString()}#${t}#${this.currState.levelState.i}`}function Level_resetLastClick(){this.lastClick[0]=-1,this.lastClick[1]=-1}function Level_resetLastDown(){this.lastDownItem[0]=-1,this.lastDownItem[1]=-1}function Level_updateState(t,r){this.currState.copyTo(this.prevState),this.currState.levelState=t,this.animationCtr[0]=r,this.animationCtr[1]=r}function Level_loop(){if(this.currState.levelState==LevelState.DISPLAYING_NUGGET&&0==this.animationCtr[0]){this.updateState(LevelState.WAITING_FOR_PLAY,300),this.currState.score+=5;for(let t=this.nuggetToDeleteI;t<this.currState.hand.length-1;t++)this.currState.hand[t]=this.currState.hand[t+1];this.currState.hand.pop(),this.setSaveString()}if(this.currState.levelState==LevelState.NEEDS_INITIATION){for(let r=0;r<this.maps[this.currState.mapI].adj.length;r++)this.currState.board.push(-1);if(this.updateState(LevelState.WAITING_FOR_PLAY,1800),this.drawCards){this.currState.shuffleDeck();let e=!0;for(let a=0;a<this.mapHands[0][this.currState.mapI];a++){if(0==this.currState.deck.length)continue;this.currState.hand.push(this.currState.deck.shift());let s=this.allCards[this.currState.hand[this.currState.hand.length-1]];s.useBezier=!0,s.bezierSetter=BezierSetter.DECK_TO_HAND,s.rStart=e?.4999:.49*Math.random(),s.rDur=.5,e=!1}}else{let i=!0;for(let h of this.mapHands[this.currState.mapI])this.currState.moveDeckToHand(h),this.allCards[h].useBezier=!0,this.allCards[h].bezierSetter=BezierSetter.DECK_TO_HAND,this.allCards[h].rStart=i?.4999:.49*Math.random(),this.allCards[h].rDur=.5,i=!1}}else if(this.currState.levelState==LevelState.DEAL_HAND&&0==this.animationCtr[0]){if(this.updateState(LevelState.WAITING_FOR_PLAY,1200),this.drawCards){this.currState.shuffleDeck;for(let l=0;l<this.mapHands[0][this.currState.mapI];l++){if(0==this.currState.deck.length)continue;this.currState.hand.push(this.currState.deck.shift());let d=this.allCards[this.currState.hand[this.currState.hand.length-1]];d.useBezier=!0,d.bezierSetter=BezierSetter.DECK_TO_HAND,d.rStart=.49*Math.random(),d.rDur=.5}}else for(let o of this.mapHands[this.currState.mapI])this.currState.moveDeckToHand(o),this.allCards[o].useBezier=!0,this.allCards[o].bezierSetter=BezierSetter.DECK_TO_HAND,this.allCards[o].rStart=.49*Math.random(),this.allCards[o].rDur=.5;this.setSaveString()}else if(this.animationCtr[0]>0)this.animationCtr[0]=Math.max(0,this.animationCtr[0]-World.dT_ms);else if(this.currState.levelState==LevelState.FINISH_FAIL){if(0==this.rowShowTmr){let S=!1;for(let c=1+this.rowShowI;c<this.maps[this.currState.mapI].finishCheck.rowPassed.length;c++)if(!(this.maps[this.currState.mapI].finishCheck.rowPassed[c]>0)){S=!0,this.rowShowI=c;break}if(!S){for(let n=0;n<this.rowShowI;n++)if(!(this.maps[this.currState.mapI].finishCheck.rowPassed[n]>0)){this.rowShowI=n;break}}this.rowShowTmr=ROW_SHOW_PERIOD_S}this.rowShowTmr=Math.max(0,this.rowShowTmr-.001*World.dT_ms)}else if(this.currState.levelState==LevelState.FINISHED&&0==this.finishCtr[0]){this.updateState(LevelState.DEAL_HAND,2e3);let u=0,$=this.maps[this.currState.mapI].finishCheck.scores;for(let C=0;C<$.length;C++)for(let _=0;_<$[C].length;_++)u+=$[C][_];for(this.currState.score+=u,this.currState.mapI+=1;this.currState.hand.length>this.currState.keepNum;){this.currState.deck.push(this.currState.hand.pop());let g=this.allCards[this.currState.deck[this.currState.deck.length-1]];g.useBezier=!0,g.bezierSetter=BezierSetter.TIME_ONLY,g.rStart=0,g.rDur=.5}for(;this.currState.board.length>0;){this.currState.deck.push(this.currState.board.pop());let v=this.allCards[this.currState.deck[this.currState.deck.length-1]];v.useBezier=!0,v.bezierSetter=BezierSetter.BOARD_TO_DECK}for(let p=0;p<this.maps[this.currState.mapI].adj.length;p++)this.currState.board.push(-1);this.setSaveString()}else if((this.currState.levelState==LevelState.FINISHED||this.currState.levelState==LevelState.FINISHED_FINAL)&&this.finishCtr[0]>0)this.finishCtr[0]=Math.max(0,this.finishCtr[0]-World.dT_ms);else if(this.currState.levelState==LevelState.FINISHED_FINAL&&0==this.finishCtr[0]){this.currState.levelState=LevelState.END_SCREEN,this.tEndScreenStart=World.t_s;let I=0,D=this.maps[this.currState.mapI].finishCheck.scores;for(let f=0;f<D.length;f++)for(let m=0;m<D[f].length;m++)I+=D[f][m];this.currState.score+=I,Settings.setBestScore(this.settingsI,this.currState.score),this.setSaveString()}this.checkClicks()}function useButton(t,r){if(t.allCards[t.currState.hand[r]].cardType==CardType.INVENTORY){t.updateState(LevelState.WAITING_FOR_PLAY,400),t.currState.keepNum+=1;for(let e=r;e<t.currState.hand.length-1;e++)t.currState.hand[e]=t.currState.hand[e+1];t.currState.hand.pop(),t.setSaveString(),t.resetLastClick();return}}function Level_checkClicks(){this.currState.levelState==LevelState.WAITING_FOR_PLAY&&0==this.animationCtr[0]?this.checkClicksWaiting():(this.resetLastClick(),this.resetLastDown()),this.draw()}function Level_checkClicksWaiting(){if(Mouse.justUp)for(let t=0;t<4;t++)this.dragMove[t]=this.dragStartCurr[t],this.dragStartCurr[t]=-1;(Mouse.justUp||!Mouse.isDown)&&(this.disableDisplayFromMoving=!1,this.disableBlackIndicator=!1,this.dragStartCurr[0]=-1,this.dragStartCurr[1]=-1),this.dragStartCurr[2]=-1,this.dragStartCurr[3]=-1;let r=-1,e=-1,a=mouseInRegion(Mouse.lastDownX,Mouse.lastDownY,World.regionHand),s=mouseInRegion(Mouse.lastUpX,Mouse.lastUpY,World.regionHand),i=a&&s&&Mouse.justUp,h=Date.now(),l=!1,d=!1;for(let o=0;o<this.currState.hand.length;o++){let S=clickWithinRadius(Mouse.lastDownX,Mouse.lastDownY,this.allCards[this.currState.hand[o]].o,this.allCards[this.currState.hand[o]].o.scale),c=clickWithinRadius(Mouse.lastUpX,Mouse.lastUpY,this.allCards[this.currState.hand[o]].o,this.allCards[this.currState.hand[o]].o.scale),n=clickWithinRadius(Mouse.lastDownOrMoveX,Mouse.lastDownOrMoveY,this.allCards[this.currState.hand[o]].o,this.allCards[this.currState.hand[o]].o.scale);S&&Mouse.isDown&&(this.dragStartCurr[0]=0,this.dragStartCurr[1]=o),n&&Mouse.isDown&&(this.dragStartCurr[2]=0,this.dragStartCurr[3]=o),S&&c&&Mouse.justUp&&(r=0,e=o),S&&n&&BLK_INDICATOR_DELAY_MS<h-Mouse.lastDownT&&(this.lastDownItem[0]=0,this.lastDownItem[1]=o),(n&&0==this.lastDownItem[0]&&o==this.lastDownItem[1]||BLK_INDICATOR_DELAY_MS>=h-Mouse.lastDownT)&&(l=!0),(n&&0==this.lastDownItem[0]&&o==this.lastDownItem[1]||BLK_INDICATOR_DELAY_MS>=h-Mouse.lastDownT)&&(d=!0)}0!=this.dragStartCurr[2]&&Mouse.isDown&&mouseInRegion(Mouse.lastDownOrMoveX,Mouse.lastDownOrMoveY,World.regionHand)&&(this.dragStartCurr[2]=0,this.dragStartCurr[3]=0);for(let u=0;u<this.currState.board.length;u++){let $=clickWithinMapSpot(Mouse.lastDownX,Mouse.lastDownY,this.maps[this.currState.mapI].corners[u],Mouse.justUp&&0==u),C=clickWithinMapSpot(Mouse.lastUpX,Mouse.lastUpY,this.maps[this.currState.mapI].corners[u]),_=clickWithinMapSpot(Mouse.lastDownOrMoveX,Mouse.lastDownOrMoveY,this.maps[this.currState.mapI].corners[u]);$&&Mouse.isDown&&-1!=this.currState.board[u]&&(this.dragStartCurr[0]=2,this.dragStartCurr[1]=u),_&&Mouse.isDown&&(this.dragStartCurr[2]=2,this.dragStartCurr[3]=u),$&&C&&Mouse.justUp&&(r=2,e=u),$&&_&&BLK_INDICATOR_DELAY_MS<h-Mouse.lastDownT&&(this.lastDownItem[0]=2,this.lastDownItem[1]=u),(_&&2==this.lastDownItem[0]&&u==this.lastDownItem[1]||BLK_INDICATOR_DELAY_MS>=h-Mouse.lastDownT)&&(l=!0),(_&&2==this.lastDownItem[0]&&u==this.lastDownItem[1]||BLK_INDICATOR_DELAY_MS>=h-Mouse.lastDownT)&&(d=!0)}let g=0==this.dragStartCurr[0]&&this.allCards[this.currState.hand[this.dragStartCurr[1]]].isBoardPlaceable;for(let v of(g=g||2==this.dragStartCurr[0],2!=this.dragStartCurr[2]&&Mouse.isDown&&!g&&mouseInRegion(Mouse.lastDownOrMoveX,Mouse.lastDownOrMoveY,World.regionMap)&&(this.dragStartCurr[2]=2,this.dragStartCurr[3]=0),Mouse.isDown||this.resetLastDown(),!l&&Mouse.isDown&&(this.disableBlackIndicator=!0),this.disableBlackIndicator&&this.resetLastDown(),!d&&Mouse.isDown&&(this.disableDisplayFromMoving=!0,this.disableClickFromMoving=!0),this.disableClickFromMoving&&(this.resetLastClick(),e=-1,r=-1),(Mouse.justUp||!Mouse.isDown)&&(this.disableClickFromMoving=!1),this.allCards))v.displayCenterMode=!1;let p=this.dragMove.reduce((t,r)=>t&&-1!=r,!0),I=this.dragMove[0]!=this.dragMove[2]||this.dragMove[1]!=this.dragMove[3];if(p&&I){if(this.updateState(LevelState.WAITING_FOR_PLAY,500),0!=this.dragMove[0]||2!=this.dragMove[2]||this.allCards[this.currState.hand[this.dragMove[1]]].isBoardPlaceable){if(0==this.dragMove[0]&&0==this.dragMove[2]){this.allCards[this.currState.hand[this.dragMove[1]]].bezierSetter=BezierSetter.SWAP_FIRST_CLICKED,this.allCards[this.currState.hand[this.dragMove[1]]].useBezier=!0;let D=this.currState.hand[this.dragMove[1]];this.currState.hand[this.dragMove[1]]=this.currState.hand[this.dragMove[3]],this.currState.hand[this.dragMove[3]]=D}else if(0==this.dragMove[0]&&2==this.dragMove[2]&&-1==this.currState.board[this.dragMove[3]]){this.allCards[this.currState.hand[this.dragMove[1]]].bezierSetter=BezierSetter.SWAP_FIRST_CLICKED,this.allCards[this.currState.hand[this.dragMove[1]]].useBezier=!0,this.currState.board[this.dragMove[3]]=this.currState.hand[this.dragMove[1]];for(let f=this.dragMove[1];f<this.currState.hand.length-1;f++)this.currState.hand[f]=this.currState.hand[f+1];this.currState.hand.pop()}else if(0==this.dragMove[0]&&2==this.dragMove[2]&&-1!=this.currState.board[this.dragMove[3]]){let m=this.currState.hand[this.dragMove[1]];this.allCards[this.currState.hand[this.dragMove[1]]].bezierSetter=BezierSetter.SWAP_FIRST_CLICKED,this.allCards[this.currState.hand[this.dragMove[1]]].useBezier=!0,this.currState.hand[this.dragMove[1]]=this.currState.board[this.dragMove[3]],this.currState.board[this.dragMove[3]]=m}else if(2==this.dragMove[0]&&2==this.dragMove[2]){let k=this.currState.board[this.dragMove[1]];this.allCards[this.currState.board[this.dragMove[1]]].bezierSetter=BezierSetter.SWAP_FIRST_CLICKED,this.allCards[this.currState.board[this.dragMove[1]]].useBezier=!0,this.currState.board[this.dragMove[1]]=this.currState.board[this.dragMove[3]],this.currState.board[this.dragMove[3]]=k}else 2==this.dragMove[0]&&0==this.dragMove[2]&&(this.allCards[this.currState.board[this.dragMove[1]]].bezierSetter=BezierSetter.SWAP_FIRST_CLICKED,this.allCards[this.currState.board[this.dragMove[1]]].useBezier=!0,this.currState.hand.push(this.currState.board[this.dragMove[1]]),this.currState.board[this.dragMove[1]]=-1)}this.setSaveString();for(let w=0;w<4;w++)this.dragMove[w]=-1;return}if(0!=this.lastClick[0]||this.allCards[this.currState.hand[this.lastClick[1]]].isBoardPlaceable||(useButton(this,this.lastClick[1]),this.resetLastClick()),this.lastClick[0]==r&&this.lastClick[1]==e){this.resetLastClick();return}if(-1==this.lastClick[0]&&-1!=r){(0==r||2==r&&-1!=this.currState.board[e])&&(this.lastClick[0]=r,this.lastClick[1]=e);return}if(2==this.lastClick[0]&&Mouse.justUp){if(i)this.updateState(LevelState.WAITING_FOR_PLAY,500),this.currState.hand.push(this.currState.board[this.lastClick[1]]),this.currState.board[this.lastClick[1]]=-1,this.setSaveString();else if(2==r){this.updateState(LevelState.WAITING_FOR_PLAY,500),this.allCards[this.currState.board[this.lastClick[1]]].bezierSetter=BezierSetter.SWAP_FIRST_CLICKED,this.allCards[this.currState.board[this.lastClick[1]]].useBezier=!0;let b=this.currState.board[e];this.currState.board[e]=this.currState.board[this.lastClick[1]],this.currState.board[this.lastClick[1]]=b,this.setSaveString()}this.resetLastClick();return}if(0==this.lastClick[0]&&Mouse.justUp){if(2==r&&this.allCards[this.currState.hand[this.lastClick[1]]].isBoardPlaceable){if(this.updateState(LevelState.WAITING_FOR_PLAY,500),this.allCards[this.currState.hand[this.lastClick[1]]].bezierSetter=BezierSetter.SWAP_FIRST_CLICKED,this.allCards[this.currState.hand[this.lastClick[1]]].useBezier=!0,-1==this.currState.board[e]){this.currState.board[e]=this.currState.hand[this.lastClick[1]];for(let M=this.lastClick[1];M<this.currState.hand.length-1;M++)this.currState.hand[M]=this.currState.hand[M+1];this.currState.hand.pop()}else{let L=this.currState.hand[this.lastClick[1]];this.currState.hand[this.lastClick[1]]=this.currState.board[e],this.currState.board[e]=L}this.setSaveString()}else if(0==r){this.updateState(LevelState.WAITING_FOR_PLAY,500),this.allCards[this.currState.hand[this.lastClick[1]]].bezierSetter=BezierSetter.SWAP_FIRST_CLICKED,this.allCards[this.currState.hand[this.lastClick[1]]].useBezier=!0;let T=this.currState.hand[e];this.currState.hand[e]=this.currState.hand[this.lastClick[1]],this.currState.hand[this.lastClick[1]]=T,this.setSaveString()}this.resetLastClick();return}}function Level(t,r,e,a,s,i,h,l,d,o,S){let c={n:t,drawCards:r,colorArrI:e,levelShapes:a,mapTypes:s,pickArrs:h,allCardCodes:l,mapHands:d,starThresholds:o,settingsI:parseInt(t)-1,allCards:l.map(t=>cardFromCode(t,a)),currState:GameState(),prevState:GameState(),dobSelected:DisplayObject(),dobIcon:DisplayObject(),lastClick:[-1,-1],setSaveString:Level_setSaveString,resetLastClick:Level_resetLastClick,lastDownItem:[-1,-1],resetLastDown:Level_resetLastDown,animationCtr:[0,1],finishCtr:[0,1],maps:[],rowShowI:0,tEndScreenStart:0,rowShowTmr:0,updateState:Level_updateState,nuggetToDeleteI:-1,loop:Level_loop,disableDisplayFromMoving:!1,disableClickFromMoving:!1,disableBlackIndicator:!1,dragStartCurr:[-1,-1,-1,-1],dragMove:[-1,-1,-1,-1],checkClicksWaiting:Level_checkClicksWaiting,checkClicks:Level_checkClicks,handSaveRegion:[0,0,0,0],dobHandSave:DisplayObject(),latchs_n1:[!1,!1,!1,!1,!1],timers_n1:[0,0,0,0,0],latchs_n11:[!1],timers_n11:[0],latchs_n13:[!1],timers_n13:[0],latchs_n31:[!1,!1,!1,!1,!1,!1,!1],timers_n31:[0,0,0,0,0,0,0],tutRegShifted:[0,0,0,0],prev_1_0:-1,prev_1_2:!1,draw:Level_draw,dobNuggetScores:DisplayObject([0,0,DISPLAY_Z+1]),nuggetScoreTimes:[0,0,0,0,0]};if(""!=Settings.levelStates[c.settingsI]){let n=Settings.levelStates[c.settingsI].split("#");for(c.currState.rebuildFromSaveString(n[0]),c.prevState.rebuildFromSaveString(n[0]);c.allCards.length>0;)c.allCards.pop();for(let u of n[1].split("@"))c.allCards.push(cardFromCode(parseInt(u),a));c.currState.levelState=LevelState_values[parseInt(n[2])];let $=c.currState.levelState in[LevelState.DEAL_HAND,LevelState.END_SCREEN];c.currState.levelState=$?c.currState.levelState:LevelState.WAITING_FOR_PLAY}else for(let C=0;C<c.allCards.length;C++)c.currState.deck.push(C);if(null==S)for(let _=0;_<s.length;_++)c.maps.push(mapTypeToMap(s[_])),c.maps[c.maps.length-1].loadArrs(i[_],s[_]),c.maps[c.maps.length-1].loadMap(1,1);else for(let g of S)c.maps.push(g);return c}